{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/CmdConfig",
  "definitions": {
    "CmdConfig": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/CmdConfigItem"
      }
    },
    "CmdConfigItem": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "description": "Absolute path to cmd or the name of a command that can run in the default shell.",
          "examples": [
            "C:\\Some Path\\To Some\\program.exe",
            "/somepath/tosome/program"
          ]
        },
        "description": {
          "type": "string",
          "description": "Short description of what the program does"
        },
        "arguments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Arguments for the cmd",
          "examples": [
            [
              "-n",
              100
            ]
          ]
        },
        "currentDir": {
          "type": "string",
          "description": "Current directory where the command executes"
        },
        "outputOptions": {
          "$ref": "#/definitions/OutputOptions"
        },
        "activationOptions": {
          "$ref": "#/definitions/ActivationOptions"
        },
        "hotkeyNumber": {
          "type": "number",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "description": "From 1-9, pressing alt+shift+hotkeyNumber will set the cmd as active."
        },
        "placeholderText": {
          "type": "string",
          "description": "Input placeholder text. Useful for differentiating between different commands.",
          "default": "Input"
        },
        "noOutputTimeoutMs": {
          "type": "number",
          "description": "Milliseconds until the no output message is shown. Helps to prevent display flashing.  May need to be adjusted depending on how fast the command runs.",
          "default": 800
        },
        "runOnEnter": {
          "type": "boolean",
          "description": "Whether to run only on enter. If false (the default) the command will be run on every key stroke. **Note!**: To activate a result if runOnEnter is true, press cmd/ctrl + enter  (vs just enter when runOnEnter is false).",
          "default": false
        }
      },
      "required": [
        "command"
      ],
      "additionalProperties": false
    },
    "OutputOptions": {
      "type": "object",
      "properties": {
        "parseAnsiColors": {
          "type": "boolean",
          "description": "Whether to parse ansii colors (nb: color might not be accurate)",
          "default": true
        },
        "reverse": {
          "type": "boolean",
          "description": "Whether to reverse the output",
          "default": false
        },
        "display": {
          "$ref": "#/definitions/Display",
          "description": "Display type"
        },
        "emptyDisplayOptions": {
          "$ref": "#/definitions/EmptyDisplayOptions"
        }
      },
      "additionalProperties": false
    },
    "Display": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "list",
              "description": "Shows item in a list with arrow keys to change selection and enter to activate."
            },
            "options": {
              "$ref": "#/definitions/ListDisplayOptions",
              "description": "Display options. Use {} for default options.",
              "default": {}
            }
          },
          "required": [
            "type",
            "options"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "single",
              "description": "WARNING: Experimental. For non-list type output."
            },
            "options": {
              "$ref": "#/definitions/SingleDisplayOptions",
              "description": "Display options. Use {} for default options.",
              "default": {}
            }
          },
          "required": [
            "type",
            "options"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ListDisplayOptions": {
      "type": "object",
      "properties": {
        "maxLineLength": {
          "type": "number",
          "description": "Displays only this many characters plus per item.",
          "default": 200
        },
        "lineSplitter": {
          "type": "string",
          "description": "Character(s) to split the output into lines.  Defaults to newlines.",
          "default": "\n"
        },
        "lineSplitterRegex": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Regular expression to split the output into lines as an array where the first item is the regex body and the second is the flags."
        },
        "fontSize": {
          "type": "number",
          "description": "Value in rem."
        },
        "hideCount": {
          "type": "boolean",
          "description": "Hides the number of lines received in the top left of the tray / panel under the input box",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "SingleDisplayOptions": {
      "type": "object",
      "properties": {
        "sizeBreakPoint": {
          "type": "number",
          "description": "Outputs under this size are shown using large size; over using small.",
          "default": 25
        },
        "largeSize": {
          "type": "number",
          "description": "Font size when output length < sizeBreakPoint. Any valid int or float.",
          "default": 1.5
        },
        "smallSize": {
          "type": "number",
          "description": "Output string length > sizeBreakPoint. Any valid tailwind font size.",
          "default": 1.2
        },
        "json": {
          "type": "boolean",
          "description": "Whether output is JSON.",
          "default": true
        },
        "jsonPath": {
          "type": "string",
          "description": "Json path to the data you want in the form: levelOne.levelTwo.levelThree.",
          "default": "choices.0.message.content"
        },
        "markdown": {
          "type": "boolean",
          "description": "Whether to parse markdown in the output. Warning you should trust the output is not  nefarious.",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "EmptyDisplayOptions": {
      "type": "object",
      "additionalProperties": false
    },
    "ActivationOptions": {
      "type": "object",
      "properties": {
        "activateAction": {
          "type": "string",
          "enum": [
            "copy",
            "open"
          ],
          "description": "Enter / double click action for a List item. Useful for opening or copying some text  to the clipboard. By default it copies. If:\n- no extractor: Will copy / open entire line.\n- extrator: Will copy / open match.\n- extractor + extractorGroup: Will copy / open specific match group.",
          "default": "copy"
        },
        "extractorRegexBody": {
          "type": "string",
          "description": "Regex to extract text from each split line for use in the enterAction in this config. Don't pre/post-fix with /."
        },
        "extractorFlags": {
          "type": "string",
          "description": "Regex flags to extract text from each split line for use in the enterAction in this config. Must have set extractorRegex. Don't pre/post-fix with /.",
          "examples": [
            "gi"
          ]
        },
        "extractorGroup": {
          "type": "number",
          "description": "Regex group to extract text from each split line for use in the enterAction in this config. Must have set extractorRegex. Don't pre/post-fix with /."
        },
        "isPath": {
          "type": "boolean",
          "description": "Enables Control or Cmd (on mac) + O to open containing folder. This will get the parent  folder of the extracted text or error if the extract text is not a path.",
          "default": false
        }
      },
      "additionalProperties": false
    }
  }
}