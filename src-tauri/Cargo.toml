[package]
name = "dynio"
version = "0.1.1"
description = "Dynio"
authors = ["bn-l"]
license = "mit"
repository = ""
default-run = "dynio"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.2", features = [] }

[dependencies]
tauri = { version = "1.6.8", features = [ "system-tray", "process-relaunch", "os-all", "global-shortcut-all", "window-show", "clipboard-all", "window-set-minimizable", "process-exit", "window-set-closable", "window-set-always-on-top", "window-unminimize", "window-set-size", "shell-open", "window-set-max-size", "window-set-focus", "window-hide", "window-set-min-size", "window-center", "window-start-dragging", "window-set-maximizable", "macos-private-api"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
thiserror = "1.0.61"
tauri-plugin-autostart = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tokio = { version = "1.38.0", features = ["time", "sync", "process", "macros"] }
serde_yaml = "0.9.34+deprecated"
winapi = "0.3.9"
tauri-plugin-fs-watch = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-single-instance = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
